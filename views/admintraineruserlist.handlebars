<div class="admin-container">
  <aside class="sidebar">
    <div class="logo">
      <img src="/img/pusa.png" alt="DLSU PUSA Logo" />
    </div>
    <nav class="sidebar-nav">
      <ul>
        <li>
          <a href="/adminadoptionrequest">
            <span class="icon"><img src="/img/requests.png" alt="Interview Icon" /></span>
            <span>Adoption interview requests</span>
          </a>
        </li>
        <li class="active">
          <a href="/admin/trainer-users">
            <span class="icon"><img src="/img/trainers.png" alt="Trainer Icon" /></span>
            <span>Trainer Users List</span>
          </a>
        </li>
        <li>
          <a href="/admin/volunteer-users">
            <span class="icon"><img src="/img/volunteers.png" alt="Volunteer Icon" /></span>
            <span>Volunteer Users List</span>
          </a>
        </li>
        <li>
          <a href="/admin/cats">
            <span class="icon"><img src="/img/cats.png" alt="Cat Icon" /></span>
            <span>Cats Listing</span>
          </a>
        </li>
      </ul>
    </nav>
  </aside>
  <main class="main-content">
    <section class="requests-section">
      <h2>Trainer Users List</h2>
      <div class="search-bar">
        <img src="/img/search.png" alt="Search" class="search-icon" />
        <input type="text" placeholder="Search by ID No. or Trainer Name" />
      </div>
      <table class="requests-table">
        <thead>
          <tr>
            <th>User ID</th>
            <th>Trainer Name</th>
            <th>Current Role</th>
            <th>Change Role To</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {{#if trainers}}
            {{#each trainers}}
            <tr data-id="{{this._id}}">
              <td>{{this._id}}</td>
              <td>{{this.user_name}}</td>
              <td class="role-cell">{{this.user_role}}</td>
              <td>
                <select class="role-select">
                  <option value="">Change Role</option>
                  <option value="Admin">Admin</option>
                  <option value="Volunteer">Volunteer</option>
                  <option value="Trainer">Trainer</option>
                </select>
              </td>
              <td>
                <button class="btn deny" data-action="remove">Remove</button>
                <button class="btn accept" data-action="change-role">Apply</button>
              </td>
            </tr>
            {{/each}}
          {{else}}
            <tr><td colspan="5" style="text-align:center;">No trainers found</td></tr>
          {{/if}}
        </tbody>
      </table>
    </section>
  </main>
</div>

<script>
document.addEventListener('DOMContentLoaded', function(){
  document.querySelectorAll('.requests-table tbody tr').forEach(function(row){
    row.addEventListener('click', async function(e){
      const btn = e.target.closest('button[data-action]');
      if (!btn) return;
      const userId = row.getAttribute('data-id');
      const action = btn.getAttribute('data-action');
      if (action === 'remove') {
        if (!confirm('Are you sure you want to remove this user?')) return;
        try {
          const res = await fetch(`/admin/users/${userId}`, { method: 'DELETE' });
          const data = await res.json();
          if (!res.ok) { alert(data.message || 'Failed to remove'); return; }
          row.remove();
        } catch (err) { console.error(err); alert('Network error'); }
      } else if (action === 'change-role') {
        const select = row.querySelector('.role-select');
        const newRole = select && select.value;
        if (!newRole) { alert('Please select a role'); return; }
        try {
          const res = await fetch(`/admin/users/${userId}/role`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ role: newRole })
          });
          const data = await res.json();
          if (!res.ok) { alert(data.message || 'Failed to update role'); return; }
          const roleCell = row.querySelector('.role-cell');
          if (roleCell) roleCell.textContent = data.user.user_role;
        } catch (err) { console.error(err); alert('Network error'); }
      }
    });
  });
});
</script>